openapi: 3.0.0
info:
  title: かんたん株価試算 API
  description: リクエストにはクライアントIDとクライアントシークレットを用いたがJWT認証が必要です
  version: 1.0.0
servers:
  - url: https://external-api-dev.kantankabuka.com/v1
    description: 検証環境（提携企業様はこちらをお使いください）
  - url: https://external-api-tandems.kantankabuka.com/v1
    description: ジダイオ社開発環境（ジダイオ社が開発の作業確認用です）
security:
  - BearerAuth: [] # 全体にJWT認証を要求する設定
paths:
  /check_required_prev3:
    post:
      summary: 株価試算に前三期分のデータが必要かの確認
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Client-ID'
      requestBody:
        $ref: '#/components/requestBodies/body_check_required_prev3'
      responses:
        '200':
          $ref: '#/components/responses/response200_check_required_prev3'
        '400':
          $ref: '#/components/responses/response400'
        '401':
          $ref: '#/components/responses/response401'
        '500':
          $ref: '#/components/responses/response500'
  /calculation:
    post:
      summary: 株価試算
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Client-ID'
      requestBody:
        $ref: '#/components/requestBodies/body_calculation'
      responses:
        '200':
          $ref: '#/components/responses/response200_calculation'
        '400':
          $ref: '#/components/responses/response400'
        '401':
          $ref: '#/components/responses/response401'
        '500':
          $ref: '#/components/responses/response500'
  /transition:
    post:
      summary: 株価推移
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Client-ID'
      requestBody:
        $ref: '#/components/requestBodies/body_transition'
      responses:
        '200':
          $ref: '#/components/responses/response200_transition'
        '400':
          $ref: '#/components/responses/response400'
        '401':
          $ref: '#/components/responses/response401'
        '500':
          $ref: '#/components/responses/response500'
components:
  parameters:
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
    Client-ID:
      name: client_id
      in: header
      required: true
      schema:
        type: string
  requestBodies:
    body_check_required_prev3:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              company:
                $ref: '#/components/schemas/company'
              settlements:
                type: array
                items:
                  $ref: '#/components/schemas/settlement'
          examples:
            example:
              $ref: '#/components/examples/example_check_required_prev3_false'
    body_calculation:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              company:
                $ref: '#/components/schemas/company'
              settlements:
                type: array
                items:
                  $ref: '#/components/schemas/settlement'
              financial:
                $ref: '#/components/schemas/financial'
              stockHolders:
                type: array
                items:
                  $ref: '#/components/schemas/stockHolderForCaluculationParam'
          examples:
            example:
              $ref: '#/components/examples/example_calculation'
    body_transition:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              company:
                $ref: '#/components/schemas/company'
              settlements:
                type: array
                items:
                  $ref: '#/components/schemas/settlement'
              financial:
                $ref: '#/components/schemas/financial'
              stockHolders:
                type: array
                items:
                  $ref: '#/components/schemas/stockHolderForTransitionParam'
              future:
                $ref: '#/components/schemas/future'
              calculationResult:
                $ref: '#/components/schemas/calculationResult'
          examples:
            example:
              $ref: '#/components/examples/example_transition'
  schemas:
    company:
      type: object
      summary: 会社情報
      properties:
        primaryIndustry:
          type: string
          description: 業種・大分類（別途、早見表を参照してください）
        secondaryIndustry:
          type: string
          description: 業種・中分類（別途、早見表を参照してください）
        tertiaryIndustry:
          type: string
          description: 業種・小分類（別途、早見表を参照してください）
        allStock:
          type: integer
          description: 発行済株式数・全株式
        treasuryStock:
          type: integer
          description: 発行済株式数・自己株式
        isGoingClose:
          type: boolean
          description: 営業してない状態か
        isOverHalfStock:
          type: boolean
          description: 資産に占める株式の割合が50%以上かどうか
        foundedYear:
          type: integer
          description: 開業年
        foundedMonth:
          type: integer
          description: 開業月
    settlement:
      type: object
      properties:
        asset:
          type: integer
          description: 資産額（千円）
        debt:
          type: integer
          description: 負債額（千円）
        sales:
          type: integer
          description: 売上額（千円）
        fulltimeNumber:
          type: integer
          description: 従業員数（正社員）
        parttimeNumber:
          type: integer
          description: 従業員数（パート）
        dividend:
          type: integer
          description: 配当支払い額（千円）
        income:
          type: integer
          description: 課税所得（千円）
        lossDeduction:
          type: integer
          description: 繰越欠損金の控除額（千円）
        capital:
          type: integer
          description: 資本金等の額（千円）
        profitReserve:
          type: integer
          description: 利益積立金額（千円）
    financial:
      type: object
      properties:
        year:
          type: integer
          description: 試算の対象とする直近の決算期の年
        month:
          type: integer
          description: 試算の対象とする直近の決算期の月
    stockHolderForCaluculationParam:
      type: object
      properties:
        stockNumber:
          type: integer
          description: 株数
        evaluationType:
          type: string
          description: 評価方式（英字）
          enum: [A, B, C]
    stockHolderForCaluculationResponse:
      type: object
      properties:
        stockNumber:
          type: integer
          description: 株数
        stockRate:
          type: number
          description: 株全体比率
        evaluationType:
          type: string
          description: 評価方式（英字）
          enum: [A, B, C]
        evaluationTypeText:
          type: string
          description: 評価方式（日本語単語）
          enum: [原則（相続税評価額), 原則（相続税評価額), 特例（配当還元価額）]
        amount:
          type: integer
          description: 評価方式に基づいた評価額
    stockHolderForTransitionParam:
      type: object
      properties:
        stockNumber:
          type: integer
          description: 株数
    stockHolderForTransitionResponse:
      type: object
      properties:
        inheritanceTaxes:
          type: array
          items:
            type: integer
            description: 相続税評価額
        corporateTaxes:
          type: array
          items:
            type: integer
            description: 法人税評価額
    future:
      type: object
      properties:
        incomes:
          type: array
          items:
            type: integer
            description: 予定利益（税引前利益）
        measures:
          type: array
          items:
            type: integer
            description: 修正損益（非経常損益）
    calculationResult:
      type: object
      properties:
        stockOne:
          type: integer
          description: 相続税評価額(1株あたり)(円)
        stockAll:
          type: integer
          description: 相続税評価額(千円)
        inheritanceTaxOwned:
          type: integer
          description: 相続税評価額(保有している株式分)(千円)
        netAssetValue:
          type: integer
          description: 純資産
        similarValue:
          type: integer
          description: 類似業種株価(円)
        companyScale:
          type: string
          description: 会社規模
        similarRate:
          type: number
          description: Lの割合
        similarIndustries:
          type: array
          items:
            type: integer
            description: 類似業種番号
        simulatedAt:
          type: string
          description: 試算日時
        isRatioElementZero:
          type: boolean
          description: 比率要素0判定
        isRatioElementOne:
          type: boolean
          description: 比率要素1判定
        corporateTaxOne:
          type: integer
          description: 法人税評価額(1株あたり)(円)
        corporateTaxAll:
          type: integer
          description: 法人税評価額(千円)
        corporateTaxRate:
          type: number
          description: 法人税比率
        dividendDiscountOne:
          type: integer
          description: 配当還元価額(1株あたり)(円)
        dividendDiscountAll:
          type: integer
          description: 配当還元価額(千円)
        inheritanceTaxBasedOnStock:
          type: integer
          description: 相続税(千円)
        ownedStockAll:
          type: integer
          description: // 財産総額(千円)
    transitionResult:
      type: object
      properties:
        companyScales:
          type: array
          items:
            type: string
            description: 会社規模
        netAssetValues:
          type: array
          items:
            type: number
            description: 純資産
        similarValues:
          type: array
          items:
            type: number
            description: 類似業務科学
        similarRates:
          type: array
          items:
            type: number
            description: Lの割合
        inheritanceTaxOnes:
          type: array
          items:
            type: number
            description: 相続税評価額(1株あたり)(円)
        inheritanceTaxAlls:
          type: array
          items:
            type: integer
            description: 相続税評価額(千円)
        corporateTaxOnes:
          type: array
          items:
            type: number
            description: 法人税評価額(1株あたり)(円)
        corporateTaxAlls:
          type: array
          items:
            type: integer
            description: 法人税評価額(千円)
  responses:
    response200_check_required_prev3:
      description: check_required_prev3の正常系レスポンスです。
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: boolean
                description: 前三期分のデータが必要かどうか
          examples:
            example1:
              $ref: '#/components/examples/response_example1'
            example2:
              $ref: '#/components/examples/response_example2'
    response200_calculation:
      description: calculationの正常系レスポンスです。
      content:
        application/json:
          schema:
            type: object
            properties:
              calculationResult:
                $ref: '#/components/schemas/calculationResult'
              stockHolders:
                type: array
                items:
                  $ref: '#/components/schemas/stockHolderForCaluculationResponse'
              simulatorIndustryPeriod:
                type: string
                description: 類似業種株価時期
              inActiveCompanyReasons:
                type: array
                items:
                  type: string
                  description: 営業していない理由（開業後3年未満/開業前・休業中・清算中/株式等保有特定会社/比準要素数1/比準要素数0/非該当）
    response200_transition:
      description: transitionの正常系レスポンスです。
      content:
        application/json:
          schema:
            type: object
            properties:
              transitionResult:
                $ref: '#/components/schemas/transitionResult'
              stockHolders:
                type: array
                items:
                  $ref: '#/components/schemas/stockHolderForTransitionResponse'
              simulatorIndustryPeriod:
                type: string
                description: 類似業種株価時期
    response400:
      description: 入力値のエラーや違反です。具体的なパラメータに言及します。
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 'invalid primaryIndustry'
    response401:
      description: 認証のエラーや違反です。一律「invalid authentication」を返却します。
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 'invalid primaryIndustry'
    response500:
      description: API内部のエラーです。一律「internal server error」を返却します。
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 'internal server error'
  examples:
    example_check_required_prev3_false:
      summary: 三期分チェック（false）
      value:
        company:
          primaryIndustry: 'K'
          secondaryIndustry: '69'
          tertiaryIndustry: '691'
          allStock: 10000
          treasuryStock: 0
          isGoingClose: false
          isOverHalfStock: false
          foundedYear: 2020
          foundedMonth: 1
        settlements:
          [
            {
              asset: 80000,
              debt: 30000,
              sales: 100000,
              fulltimeNumber: 20,
              parttimeNumber: 0,
              dividend: 0,
              income: 10000,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 268375,
            },
            {
              asset: 80000,
              debt: 30000,
              sales: 100000,
              fulltimeNumber: 20,
              parttimeNumber: 0,
              dividend: 1000,
              income: 10000,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 268375,
            },
          ]
        financial:
          year: 2020
          month: 3
    example_calculation:
      summary: 試算サンプル
      value:
        company:
          primaryIndustry: 'K'
          secondaryIndustry: '69'
          tertiaryIndustry: '691'
          allStock: 10000
          treasuryStock: 0
          isGoingClose: false
          isOverHalfStock: false
          foundedYear: 2020
          foundedMonth: 1
        settlements:
          [
            {
              asset: 30000,
              debt: 10000,
              sales: 50000,
              fulltimeNumber: 0,
              parttimeNumber: 0,
              dividend: 0,
              income: 0,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 0,
            },
            {
              asset: 30000,
              debt: 10000,
              sales: 50000,
              fulltimeNumber: 0,
              parttimeNumber: 0,
              dividend: 0,
              income: 0,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 0,
            },
            {
              asset: 30000,
              debt: 10000,
              sales: 50000,
              fulltimeNumber: 0,
              parttimeNumber: 0,
              dividend: 0,
              income: 0,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 0,
            },
          ]
        financial:
          year: 2020
          month: 3
        stockHolders:
          [
            { stockNumber: 1000, evaluationType: 'A' },
            { stockNumber: 1000, evaluationType: 'B' },
            { stockNumber: 1000, evaluationType: 'C' },
          ]
        inActiveCompanyReasons: ['非該当']
    example_transition:
      summary: 試算サンプル
      value:
        company:
          primaryIndustry: 'K'
          secondaryIndustry: '69'
          tertiaryIndustry: '691'
          allStock: 10000
          treasuryStock: 0
          isGoingClose: false
          isOverHalfStock: false
          foundedYear: 2020
          foundedMonth: 1
        settlements:
          [
            {
              asset: 30000,
              debt: 10000,
              sales: 50000,
              fulltimeNumber: 0,
              parttimeNumber: 0,
              dividend: 0,
              income: 0,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 0,
            },
            {
              asset: 30000,
              debt: 10000,
              sales: 50000,
              fulltimeNumber: 0,
              parttimeNumber: 0,
              dividend: 0,
              income: 0,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 0,
            },
            {
              asset: 30000,
              debt: 10000,
              sales: 50000,
              fulltimeNumber: 0,
              parttimeNumber: 0,
              dividend: 0,
              income: 0,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 0,
            },
          ]
        financial:
          year: 2020
          month: 3
        stockHolders: [{ stockNumber: 1000 }, { stockNumber: 1000 }, { stockNumber: 1000 }]
        future:
          incomes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
          measures: [0, 0, -25000, 0, 0, 0, 0, 0, 0]
        calculationResult:
          stockOne: 2000
          stockAll: 20000
          inheritanceTaxOwned: 0
          netAssetValue: 2000
          similarValue: 14
          companyScale: '小会社'
          similarRate: 0
          similarIndustries: [94, 92]
          simulatedAt: '2025-02-04 11:55:39.474240201 +0900 Local'
          isRatioElementZero: false
          isRatioElementOne: true
          corporateTaxOne: 2000
          corporateTaxAll: 20000
          corporateTaxRate: 0
          dividendDiscountOne: 50
          dividendDiscountAll: 500
          inheritanceTaxBasedOnStock: 0
          ownedStockAll: 0
    response_example1:
      summary: 前三期分のデータが必要
      value:
        result: true
    response_example2:
      summary: 前三期分のデータが必要ではない
      value:
        result: false
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # 表示にJWTを指定
