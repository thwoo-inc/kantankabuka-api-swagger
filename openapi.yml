openapi: 3.0.0
info:
  title: かんたん株価試算 API
  description: リクエストにはクライアントIDとクライアントシークレットを用いたがJWT認証が必要です
  version: 1.0.0
servers:
  - url: https://kantankabuka-external-api-722937962589.asia-northeast1.run.app/v1
    description: Tendems
  - url: https://external-api-tandems.kantankabuka.com/v1
    description: Tendems
  - url: http://localhost:8080/v1
    description: Local server
security:
  - BearerAuth: [] # 全体にJWT認証を要求する設定
paths:
  /check_required_prev3:
    post:
      summary: 株価試算に前三期分のデータが必要かの確認
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            default: application/json
        - in: header
          name: Kankabu-Client-ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_check_required_prev3'
            examples:
              example1:
                $ref: '#/components/examples/example_check_required_prev3_true'
              example2:
                $ref: '#/components/examples/example_check_required_prev3_false'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_ok_check_required_prev3'
              examples:
                example1:
                  $ref: '#/components/examples/response_example1'
                example2:
                  $ref: '#/components/examples/response_example2'
        '400':
          description: Bad Request - Invalid input data
        '401':
          description: Unauthorized - JWT token missing or invalid
        '500':
          description: Internal Server Error
  /calculation:
    post:
      summary: 株価試算
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            default: application/json
        - in: header
          name: Kankabu-Client-ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_calculation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_ok_calculation'
        '400':
          description: Bad Request - Invalid input data
        '401':
          description: Unauthorized - JWT token missing or invalid
        '500':
          description: Internal Server Error
  /transition:
    post:
      summary: 株価推移
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            default: application/json
        - in: header
          name: Kankabu-Client-ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_transition'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_ok_transition'
        '400':
          description: Bad Request - Invalid input data
        '401':
          description: Unauthorized - JWT token missing or invalid
        '500':
          description: Internal Server Error
components:
  schemas:
    body_check_required_prev3:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/company'
        settlements:
          type: array
          items:
            $ref: '#/components/schemas/settlement'
    body_calculation:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/company'
        stockHolders:
          type: array
          items:
            $ref: '#/components/schemas/stockHolder'
        settlements:
          type: array
          items:
            $ref: '#/components/schemas/settlement'
        financial:
          $ref: '#/components/schemas/financial'
    body_transition:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/company'
        stockHolders:
          type: array
          items:
            $ref: '#/components/schemas/stockHolder'
        settlements:
          type: array
          items:
            $ref: '#/components/schemas/settlement'
        financial:
          $ref: '#/components/schemas/financial'
        futures:
          type: array
          items:
            $ref: '#/components/schemas/future'
        calculationResult:
          $ref: '#/components/schemas/calculationResult'
    financial:
      type: object
      properties:
        year:
          type: integer
          example: 2025
        month:
          type: integer
          example: 1
    company:
      type: object
      properties:
        primaryIndustry:
          type: string
          example: 'B'
        secondaryIndustry:
          type: string
          example: '3'
        tertiaryIndustry:
          type: string
          example: '31'
        forthIndustry:
          type:
            enum: [311, 312, 313]
          example: 311
        allStock:
          type: integer
        latestAsset:
          type: integer
          example: 9
        latestDebt:
          type: integer
          example: 0
        latestSales:
          type: integer
          example: 0
        fulltimeNumber:
          type: integer
          example: 0
        parttimeNumber:
          type: integer
          example: 0
    settlement:
      type: object
      properties:
        dividend:
          type: integer
          example: 0
        income:
          type: integer
          example: 0
        lossDeduction:
          type: integer
          example: 0
        capital:
          type: integer
          example: 0
        profitReserve:
          type: integer
          example: 0
    future:
      type: object
      properties:
        income:
          type: integer
          example: 0
        measure:
          type: integer
          example: 0
    stockHolder:
      type: object
      properties:
        stockNumber:
          type: integer
          example: 10000
        stockRate:
          type: number
          example: 50.0
        evaluationType:
          type: string
          example: 'A'
        evaluationTypeText:
          type: string
          example: '原則（相続税評価額)'
        amount:
          type: integer
          example: 500000
    response_ok_check_required_prev3:
      type: object
      properties:
        message:
          type: string
          example: 'Calculation successful'
        data:
          type: object
          properties:
            result:
              type: number
              example: 123.45
    response_ok_calculation:
      type: object
      properties:
        calculationResult:
          $ref: '#/components/schemas/calculationResult'
        stockHolders:
          type: array
          items:
            $ref: '#/components/schemas/stockHolder'
        simulatorIndustoryPeriod:
          type: string
          example: '2025-01-07T00:00:00Z'
    response_ok_transition:
      type: object
      properties:
        transitionResult:
          $ref: '#/components/schemas/transitionResult'
        stockHolders:
          type: array
          items:
            $ref: '#/components/schemas/stockHolder'
        simulatorIndustoryPeriod:
          type: string
          example: '2025-01-07T00:00:00Z'
    calculationResult:
      type: object
      properties:
        stockOne:
          type: number
          example: 5000
        stockAll:
          type: number
          example: 100000
    transitionResult:
      type: object
      properties:
        companyScales:
          type: array
          items:
            type: string
          example: ['A', 'B', 'C']
        netAssetValues:
          type: array
          items:
            type: number
            example: [0.0, 0.0, 0.0]
  examples:
    example_check_required_prev3_true:
      summary: 前三期分のデータが必要
      value:
        company:
          primaryIndustry: 'K'
          secondaryIndustry: '69'
          tertiaryIndustry: ''
          forthIndustry: 311
          allStock: 10000
          treasuryStock: 0
          isFoundedRecently: false
          isGoingClose: false
          isOverHalfStock: false
          latestAsset: 30000
          latestDebt: 10000
          latestSales: 50000
          fulltimeNumber: 0
          parttimeNumber: 0
        settlements:
          [
            { dividend: 0, income: 0, lossDeduction: 0, capital: 1000, profitReserve: 0 },
            { dividend: 0, income: 0, lossDeduction: 0, capital: 1000, profitReserve: 0 },
            { dividend: 0, income: 0, lossDeduction: 0, capital: 1000, profitReserve: 0 },
          ]
    example_check_required_prev3_false:
      summary: 前三期分のデータが必要ではない
      value:
        company:
          primaryIndustry: 'K'
          secondaryIndustry: '69'
          tertiaryIndustry: ''
          allStock: 10000
          treasuryStock: 0
          isFoundedRecently: false
          isGoingClose: false
          isOverHalfStock: false
          latestAsset: 80000
          latestDebt: 30000
          latestSales: 100000
          fulltimeNumber: 20
          parttimeNumber: 0
        settlements:
          [
            { dividend: 0, income: 10000, lossDeduction: 0, capital: 1000, profitReserve: 268375 },
            {
              dividend: 1000,
              income: 10000,
              lossDeduction: 0,
              capital: 1000,
              profitReserve: 268375,
            },
            { dividend: 1000, income: 10000, lossDeduction: 1000, capital: 1000, profitReserve: 0 },
          ]
    response_example1:
      summary: 前三期分のデータが必要
      value:
        result: true
    response_example2:
      summary: 前三期分のデータが必要ではない
      value:
        result: false
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # 表示にJWTを指定
